{"version":3,"sources":["Components/Radar/Radar.js","Components/App/arrow.png","Components/App/App.js","index.js"],"names":["getPointPosition","latlng","distance","heading","rad","Math","PI","radInv","R","lon1","lng","lat1","lat","rheading","sinLat1","sin","cosLat1","cos","cosDistR","sinDistR","lat2","asin","lon2","atan2","RadarPolyLine","props","useState","setHeading","center","positions","length","useEffect","timer1","setTimeout","clearTimeout","Polyline","pathOptions","color","weight","Radar","radarColor","radarPosition","position","radarRadius","parseFloat","radius","map","useMapEvent","setWeight","getZoom","toString","circles","count","i","getCircles","trunc","points","push","getPointsPosition","LayerGroup","Circle","time","circlesRadius","fillOpacity","MapEvents","mapEvent","e","clickPosition","radarMovable","changeRadarPosition","setView","animate","App","startPosition","movable","setMovable","setRadarPosition","setRadius","setColor","setMap","menuShow","setMenuShow","id","className","type","onClick","src","arrow","alt","locate","on","flyTo","checked","onChange","value","target","replace","MapContainer","eventHandlers","click","console","log","whenCreated","zoom","style","height","TileLayer","url","attribution","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6353f1a2.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './Radar.scss';\nimport {Circle, LayerGroup, Polyline, useMapEvent} from \"react-leaflet\";\n\nconst getPointPosition = (latlng, distance, heading) => {\n    heading = (heading + 360) % 360;\n    let rad = Math.PI / 180,\n        radInv = 180 / Math.PI,\n        R = 6378137, // approximation of Earth's radius\n        lon1 = latlng.lng * rad,\n        lat1 = latlng.lat * rad,\n        rheading = heading * rad,\n        sinLat1 = Math.sin(lat1),\n        cosLat1 = Math.cos(lat1),\n        cosDistR = Math.cos(distance / R),\n        sinDistR = Math.sin(distance / R),\n        lat2 = Math.asin(sinLat1 * cosDistR + cosLat1 *\n            sinDistR * Math.cos(rheading)),\n        lon2 = lon1 + Math.atan2(Math.sin(rheading) * sinDistR *\n            cosLat1, cosDistR - sinLat1 * Math.sin(lat2));\n    lon2 = lon2 * radInv;\n    lon2 = lon2 > 180 ? lon2 - 360 : lon2 < -180 ? lon2 + 360 : lon2;\n    return [lat2 * radInv, lon2];\n}\n\nconst getPointsPosition = (latlng, distance) => {\n    let points = [];\n    let heading = [0, 180, 270, 90];\n    for (let i = 0; i < 4; i++) {\n        points.push(getPointPosition(latlng, distance, heading[i]));\n    }\n    return [[latlng, points[0]], [latlng, points[1]], [latlng, points[2]], [latlng, points[3]]];\n}\n\nconst RadarPolyLine = (props) => {\n    const [heading, setHeading] = useState(0);\n    const center = props.center;\n    const point = getPointPosition(center, props.length, heading);\n    const positions = [center, point];\n    const delay = 5;\n    useEffect(() => {\n        let timer1 = setTimeout(() => setHeading((heading <= 360) ? (heading + 1) : 0), delay);\n        return () => {\n            clearTimeout(timer1);\n        };\n    }, [heading]);\n    return (\n        <Polyline\n            positions={positions}\n            pathOptions={{color: props.color, weight: props.weight}}\n        />\n    );\n}\n\nconst Radar = (props) => {\n    const radarColor = props.color;\n    const radarPosition = props.position;\n    const radarRadius = parseFloat(props.radius);\n    const map = useMapEvent('zoom', () => {\n        setWeight((map.getZoom() / 6).toString());\n    });\n    const [weight, setWeight] = useState((map.getZoom() / 6).toString());\n    const getCircles = (count, radius) => {\n        let circles = [];\n        for (let i = 1; i < count; i++) {\n            circles[i - 1] = radius - i * 100;\n        }\n        return circles;\n    }\n    const circlesCount = Math.trunc(radarRadius / 100);\n    const circles = getCircles(circlesCount, radarRadius);\n    const points = getPointsPosition(radarPosition, radarRadius);\n    if (radarRadius < 100) return null;\n    return (\n        <LayerGroup>\n            <Circle\n                center={radarPosition} radius={radarRadius}\n                pathOptions={{color: radarColor, weight: weight}}\n            />\n            <Polyline\n                positions={points}\n                pathOptions={{color: radarColor, weight: weight}}\n            />\n            <RadarPolyLine\n                center={radarPosition}\n                color={radarColor}\n                weight={weight}\n                time={2}\n                length={radarRadius}\n            />\n            {circles.map((circlesRadius, i) =>\n                <Circle\n                    key={\"Circle\" + i}\n                    center={radarPosition} radius={circlesRadius}\n                    pathOptions={{color: radarColor, weight: weight - 1, fillOpacity: 0}}\n                />\n            )}\n        </LayerGroup>\n    );\n}\nexport default Radar;","export default __webpack_public_path__ + \"static/media/arrow.c51499a1.png\";","import React, {useState} from 'react';\r\nimport {MapContainer, TileLayer, useMapEvent} from 'react-leaflet';\r\nimport Radar from \"../Radar/Radar\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport arrow from './arrow.png';\r\nimport './App.scss';\r\n\r\nconst MapEvents = (props) => {\r\n    const mapEvent = useMapEvent('click', (e) => {\r\n        const clickPosition = e.latlng;\r\n        if (props.radarMovable) {\r\n            props.changeRadarPosition(clickPosition);\r\n        } else {\r\n            mapEvent.setView(clickPosition, mapEvent.getZoom(), {animate: true,});\r\n        }\r\n    });\r\n    return null;\r\n}\r\n\r\nconst App = () => {\r\n    const startPosition = {lat: 59.94, lng: 30.3}\r\n    const [movable, setMovable] = useState(false);\r\n    const [radarPosition, setRadarPosition] = useState(startPosition);\r\n    const [radius, setRadius] = useState(0.5);\r\n    const [color, setColor] = useState('#00FF00');\r\n    const [map, setMap] = useState(null);\r\n    const [menuShow, setMenuShow] = useState(true);\r\n\r\n    const GoToNowPosition = () => {\r\n        map.locate().on(\"locationfound\", function (e) {\r\n            map.flyTo(e.latlng, map.getZoom());\r\n            setRadarPosition(e.latlng);\r\n        })\r\n    };\r\n\r\n    return (\r\n        <div id=\"App\">\r\n            <div className={'map__buttons_container'}>\r\n                <input type=\"image\" className={\"map__button_hide_menu map__control_element__container\" + ((menuShow) ? \" show\" : \" hide\")} onClick={() => setMenuShow(!menuShow)} src={arrow} alt=\"Swap\"/>\r\n                <button className={'map__button_goto map__control_element__container' + ((menuShow) ? \" show\" : \" hide\")} onClick={GoToNowPosition}>\r\n                    Перместиться на текущую локцию\r\n                </button>\r\n                <label className={'map__checkbox_movable__container map__control_element__container' + ((menuShow) ? \" show\" : \" hide\")}>\r\n                    <input className={'map__checkbox_movable__input'} type={\"checkbox\"} checked={movable}\r\n                           onChange={() => setMovable(!movable)}/>\r\n                    <p>Перемещение радара по клику</p>\r\n                </label>\r\n                <label className={'map__radius_input__container map__control_element__container' + ((menuShow) ? \" show\" : \" hide\")}>\r\n                    <p>Введите радиус радара(км):</p>\r\n                    <input className={'map__radius_input__field'} type={\"text\"} value={radius}\r\n                           onChange={(e) => setRadius(e.target.value.replace(',', '.'))}/>\r\n                </label>\r\n                <label className={'map__color_input__container map__control_element__container' + ((menuShow) ? \" show\" : \" hide\")}>\r\n                    <p>Выберите цвет для радара:</p>\r\n                    <input className={'map__color_input__field'} type={\"color\"} value={color}\r\n                           onChange={(e) => setColor(e.target.value)}/>\r\n                </label>\r\n            </div>\r\n            <MapContainer eventHandlers={{click: (e) => console.log(e)}} whenCreated={setMap} center={startPosition}\r\n                          zoom={14} style={{height: \"100vh\"}}>\r\n                <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" attribution='&copy; Site created by <a href=\"https://github.com/finn3r/\">Finner</a>'/>\r\n                <MapEvents radarMovable={movable} changeRadarPosition={setRadarPosition}/>\r\n                <Radar color={color} position={radarPosition} radius={radius * 1000}/>\r\n            </MapContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App/App';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);"],"sourceRoot":""}